name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  light-checks:
    name: Ligth checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Clippy
        run: |
          rustup update --no-self-update nightly
          rustup +nightly component add clippy
          cargo +nightly clippy --workspace --all-targets --all-features -- -D clippy::all -D warnings

      - name: Rustfmt
        run: |
          rustup +nightly component add rustfmt
          cargo +nightly fmt --all --check

  check:
    name: Check all features and all targets against the MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Perform checks
        run: |
          rustup update --no-self-update stable
          cargo +stable install cargo-hack --locked
          RUSTFLAGS=-Dwarnings cargo +stable hack --no-private --feature-powerset --keep-going check --rust-version --workspace --all-targets --verbose

  test:
    name: Test Rust ${{matrix.toolchain}} on ${{matrix.os}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@main
      - name: Run test
        run: |
          rustup update --no-self-update ${{ matrix.toolchain }}
          cargo +${{ matrix.toolchain }} test

  no-std:
    name: Build for no-std
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@main
      - name: Build for no-std
        run: |
          rustup update --no-self-update ${{ matrix.toolchain }}
          rustup +${{ matrix.toolchain }} target add wasm32-unknown-unknown
          cargo +${{ matrix.toolchain }} build --verbose --no-default-features --target wasm32-unknown-unknown
